//
	.well
		| !{JSON.stringify(item.get(field.path))}

- var hasFiles = item.get(field.paths.exists).length
.field.type-localfiles(data-field-type=field.type, data-field-path=field.path, data-field-collapse=field.collapse ? 'true' : false, data-field-depends-on=field.dependsOn, data-field-noedit=field.noedit ? 'true' : 'false', data-field-value=hasFiles ? 'true' : 'false')
	label.field-label= field.label
	input(type='file', name=field.paths.upload, multiple).field-upload
	input(type='hidden', name=field.paths.action, value='').field-action
	input(type='hidden', name=field.paths.order, value='').field-order
	.field-ui(class=hasFiles ? 'has-file' : false)
		.files-container.clearfix
			each value in item.get(field.path)
				.file-field.file-sortable(data-id=value._id)
					.file-preview
						a(href=value.url, rel=field.path, style="min-width:80px; min-height:80px").img-thumbnail
							//img(width=90, height=90, data-src=value.fit(false, 90), data-id=value.public_id, data-wysiwyg=(field.options.wysiwyg ? 'true' : false), data-wysiwyg-options=(field.options.wysiwyg ? '#{JSON.stringify(field.options.wysiwyg)}' : false), data-wysiwyg-original=(field.options.wysiwyg ? value.url : false), data-wysiwyg-src=(field.options.wysiwyg ? ( 'object' == typeof field.options.wysiwyg ? value[field.options.wysiwyg.crop](field.options.wysiwyg.width, field.options.wysiwyg.height) : value.src() ) : false)).img-load
							if value.filetype = 'image/jpeg'
								img(width=80, height=80, data-id=value._id, src='/'+value.path+'/'+value.filename+'?dim=160x160').file-load
							else
								.glyphicon.glyphicon-file.img-loading(style='position:absolute; top:22%; left:43%;')
							.glyphicon.glyphicon-trash(style='display:none; position:absolute; top:23%; left:43%;')
						p.file-name(style='max-width:80px; overflow:hidden; text-overflow:ellipsis; white-space:nowrap;')
							=value.filename
					.file-details
						a(href=js, data-alt-text='Delete').btn.btn-link.btn-cancel.btn-remove-file Remove
						a(href=js, data-alt-text='Undo', style='display:none;').btn.btn-link.btn-cancel.btn-undo-remove Undo


		.file-container
			.file-details
				if hasFiles
					.file-values
						a(href=field.format(item), target='_blank').field-value=field.format(item)
				.upload-queued.pull-left
					.alert.alert-success File <span class="file-name"></span>selected - save to upload
				.delete-queued.pull-left
					.alert.alert-danger
		.file-toolbar.clearfix
			div.pull-left
				a(href=js).btn.btn-default.btn-upload Upload Images
				//a(href=js).btn.btn-default.btn-upload-file=(hasFiles ? 'Change' : 'Upload' ) + ' File'
				//a(href=js, data-alt-text='Delete File', style=(hasFiles ? '' : 'display: none;')).btn.btn-link.btn-cancel.btn-delete-file Remove File
				//a(href=js, data-alt-text='Cancel Upload', style='display: none;').btn.btn-link.btn-cancel.btn-cancel-file Cancel Upload
				//a(href=js, style='display: none;').btn.btn-link.btn-cancel.btn-undo-file Undo Remove
		if field.note
			.field-note!= field.note

		//
			block files-sortable-list
				.files-sortable-container.clearfix
					ul(data-field-path=field.path).list-unstyled.localfiles.sortable
						each file in item.get(field.path)
							li(data-id=file._id).files-item
								span.glyphicon.glyphicon-resize-vertical.sort-handle
								=file.filename+' ('+file.filetype+')'