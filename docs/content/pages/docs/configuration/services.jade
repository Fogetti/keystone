extends ../../../templates/layout/base

include ../../../templates/mixins/docsnav

block content
	.container: .row
		
		.col-sm-3
			+docsnav(docssection)
		
		.col-sm-9: .docs-content
			h2 Services
			
			
			a(name='google')
			h3 Google Maps
			
			p Keystone's <a href="/docs/database#field_location">Location field type</a> supports integration with the <a href="http://www.morethanamap.com" target="_blank">Google Maps API</a> to auto-improve values (including discovering latitude and longitude) via the <a href="https://developers.google.com/places/documentation/autocomplete" target="_blank"> Places Autocomplete API</a>.
			
			p To enable these features, <a href="https://code.google.com/apis/console/" target"_blank">obtain an API Key from Google</a> and enable the Google Maps v3 and Google Places APIs for it, then set the following options:
			
			table.table
				col(width=270)
				col
				tr
					td <code>google api key</code> <code class="data-type">String</code>
					td
						p Your Google API browser key, used to authenticate the Javascript Maps API in the Admin UI.
						p Will default to <code class="default-value">process.env.GOOGLE_BROWSER_KEY</code>
				tr
					td <code>google server api key</code> <code class="data-type">String</code>
					td
						p Your Google API server key, used to authenticate requests to the Maps API from the server.
						p Will default to <code class="default-value">process.env.GOOGLE_SERVER_KEY</code>
				tr
					td <code>default region</code> <code class="data-type">String</code> 
					td
						p <strong>Optional</strong> setting to limit autocomplete results to a specific region.
						p This option takes a region code, specified as a <a href="http://www.iana.org/assignments/language-subtag-registry/language-subtag-registry" target="_blank">IANA language region</a> subtag.
						p Can be specified on a per-field basis by setting the <code>region</code> option on any <code>Location</code> field.
			
			pre: code.language-javascript
				| keystone.set('google api key', 'your-browser-key');
				| keystone.set('google server api key', 'your-server-key');
				| keystone.set('default region', 'au'); // optional, will limit autocomplete results to Australia
			
			p.note Note that the use of the Places Geocoding API is subject to a query limit of 2,500 geolocation requests per day, except with an enterprise license.
			p.note The Places Geocoding API may only be used in conjunction with a Google map; geocoding results without displaying them on a map is prohibited. Please make sure your Keystone app complies with the Google Maps API License.
			
			
			a(name='amazons3')
			h3 Amazon S3
			
			p KeystoneJS supports <a href="http://aws.amazon.com/s3/" target="_blank">Amazon S3</a> for file upload and hosting, with the <a href="/docs/database#field_s3file">S3File</a> field type.
			
			p To use the S3File field in your app, <a href="https://portal.aws.amazon.com/gp/aws/developer/subscription/index.html?productCode=AmazonS3" target="_blank">sign up for an account</a>, create an <strong>S3 bucket</strong>, and get your <strong>key</strong> and <strong>secret</strong>.
			
			p Then set the <code>s3 config</code> option to an object containing your configuration (see example below).
			
			p Alternatively, set the <code class="default-value">S3_BUCKET</code>, <code class="default-value">S3_KEY</code> and <code class="default-value">S3_SECRET</code> environment variables.
			
			pre: code.language-javascript
				| keystone.set('s3 config', { bucket: 'my-bucket', key: 'my-key', secret: 'my-secret' });
			
			
			a(name='cloudinary')
			h3 Cloudinary
			
			p <a href="http://cloudinary.com" target="_blank">Cloudinary</a> is an image upload / resizing / hosting service that makes it easy to implement image management in your KeystoneJS app using the <a href="/docs/database#field_cloudinaryimage">CloudinaryImage</a> and <a href="/docs/database#field_cloudinaryimages">CloudinaryImages</a> field types.
			
			p To use the Cloudinary Image fields in your app, <a href="https://cloudinary.com/users/register/free" target="_blank">sign up for an account</a> (Cloudinary offers a free tier with up to 500MB storage, 50,000 images and 1GB data transfer) and get your <strong>cloud name</strong>, <strong>api key</strong> and <strong>api secret</strong>.
			
			p Then set the <code>cloudinary config</code> option to
				ul
					li an object containing your configuration (see example below), or
					li the environment variable string Cloudinary gives you (e.g. <code class="default-value">cloudinary://api_key:api_secret@cloud_name</code>)
			
			p This option will default to the <code class="default-value">CLOUDINARY_URL</code> environment variable if it is set.
			
			p When images are uploaded to Cloudinary via the Admin UI or field methods, they will have some tags automatically set on them. To prefix these tags with a custom string, set the <code>cloudinary prefix</code> option.
			
			p The built-in tags that are automatically set include:
				ul
					li <code class="default-value">{list.path}_{field.path}</code>
					li <code class="default-value">{list.path}_{field.path}_{item.id}</code>
					li <code class="default-value">{prefix}</code> (if set)
					li <code class="default-value">dev</code> (if the <code>env</code> option is not set to <code class="default-value">production</code>)
			
			pre: code.language-javascript
				| keystone.set('cloudinary config', { cloud_name: 'my-cloud', api_key: 'abc', api_secret: '123' });
				| // or 
				| keystone.set('cloudinary config', 'cloudinary://api_key:api_secret@cloud_name' );
				| 
				| // optional, will prefix all built-in tags with 'keystone_'
				| keystone.set('cloudinary prefix', 'keystone');
			
			
			a(name='embedly')
			h3 Embed.ly
			
			p <a href="http://embed.ly" target="_blank">Embed.ly</a> is a service that will parse a url (e.g. Youtube embed link) and return a whole lot of useful information, like the provider name, summary metadata, width and height of videos, as well as a clean link to use for embedding media in your views. They offer a free plan for up to 5,000 urls per month.
			
			p The <a href="/docs/database#field_embedly">Embedly field type</a> is an easy way to integrate their API with your KeystoneJS app.
			
			p To configure KeystoneJS to support the Embed.ly API, simply <a href="https://app.embed.ly/signup">sign up for an account</a>, get your api key, and set the <code>embedly api key</code> option.
			
			p This option will default to the <code class="default-value">EMBEDLY_API_KEY</code> environment variable if it is set.
			
			pre: code.language-javascript
				| keystone.set('embedly api key', 'your-key');


			a(name='mandrill')
			h3 Mandrill
			p <a href="http://mandrill.com" target="_blank">Mandrill</a> is a scalable and affordable email infrastructure service that allows you to send emails easily. They offer a free plan for up to 12,000
			emails per month.

			p To configure KeystoneJS to support the Mandrill API, simply <a href="https://mandrill.com/signup/">sign up for an account</a>, get your api key, and set both the <code>mandrill api key</code> and <code>mandrill username</code> options.
			
			p These options will default to the <code class="default-value">MANDRILL_API_KEY & MANDRILL_USERNAME</code> environment variable's if set.

			pre: code.language-javascript
				| keystone.set('mandrill api key', 'your-key');
				| keystone.set('mandrill username', 'your-username');